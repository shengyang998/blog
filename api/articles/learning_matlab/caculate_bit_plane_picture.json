{"title":"使用 Matlab Parfor 高效计算位平面图","slug":"learning_matlab/caculate_bit_plane_picture","date":"2017-03-11T02:05:57.000Z","updated":"2018-04-19T08:01:35.966Z","comments":true,"path":"api/articles/learning_matlab/caculate_bit_plane_picture.json","photos":[],"link":"","excerpt":"bit-plane，就是将一张图按照各个比特位来切分以后的图，每一张位面图都是二值图。<br>为了避免与游戏中的名词位面图混淆，可以把bit-plane翻译成位平面图，而且这样更好理解。本文章记录了使用 Matlab2016a 计算一张图的位平面图过程，以及并行功能使用过程中的一些要点。<br>Matlab 的并行工具使用起来还算简单，效率也高，按照本人1.3 GHz Intel Core i5测试的结果加速比大概有 1.5。","covers":null,"content":"<p>bit-plane，就是将一张图按照各个比特位来切分以后的图，每一张位面图都是二值图。<br>为了避免与游戏中的名词<code>位面图</code>混淆，可以把bit-plane翻译成<code>位平面图</code>，而且这样更好理解。</p><p>本文章记录了使用 Matlab2016a 计算一张图的位平面图过程，以及并行功能使用过程中的一些要点。<br>Matlab 的并行工具使用起来还算简单，效率也高，按照本人<code>1.3 GHz Intel Core i5</code>测试的结果加速比大概有 1.5。</p><a id=\"more\"></a><h2 id=\"废话不多说，直接上代码和注释\"><a href=\"#废话不多说，直接上代码和注释\" class=\"headerlink\" title=\"废话不多说，直接上代码和注释\"></a>废话不多说，直接上代码和注释</h2><ol><li><p>首先初始化 Matlab 并行池：</p><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% parallel pool initialization</span></span><br><span class=\"line\">CoreNum = <span class=\"number\">2</span>; <span class=\"comment\">% core number of you computer</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">isempty</span>(gcp(<span class=\"string\">'nocreate'</span>))</span><br><span class=\"line\">    parpool(<span class=\"string\">'local'</span>, CoreNum);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">disp</span>(<span class=\"string\">'parallel pool is already initialized'</span>)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure></li><li><p>读取图像，并初始化用于保存结果的变量：</p><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% read the image by path</span></span><br><span class=\"line\">im = imread(<span class=\"string\">'/Users/yjm/Desktop/_MG_0403.jpg'</span>);</span><br><span class=\"line\"><span class=\"comment\">% show the original image</span></span><br><span class=\"line\">figure, subplot(<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>), imshow(im);</span><br><span class=\"line\">im = double(im);</span><br><span class=\"line\"><span class=\"comment\">% get the size</span></span><br><span class=\"line\">[height, width, dropped] = <span class=\"built_in\">size</span>(im);</span><br><span class=\"line\"><span class=\"comment\">% initialize the result matrix</span></span><br><span class=\"line\">onesbitmap = <span class=\"built_in\">ones</span>(height, width);</span><br><span class=\"line\">result = [];</span><br></pre></td></tr></table></figure></li><li><p>开始计算：</p><blockquote><p>这里用的是 parfor 并行计算工具，用来代替原本的普通 for 循环：</p></blockquote></li></ol><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% start caculation</span></span><br><span class=\"line\">tic <span class=\"comment\">% 计时开始</span></span><br><span class=\"line\"><span class=\"keyword\">parfor</span> v = <span class=\"number\">1</span> : <span class=\"number\">8</span></span><br><span class=\"line\">    tic</span><br><span class=\"line\">    bitmap = <span class=\"built_in\">ones</span>(height, width);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span> : height</span><br><span class=\"line\">        <span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span> : width</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"built_in\">mod</span>(<span class=\"built_in\">floor</span>(im(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>)/(<span class=\"number\">2</span>^(v<span class=\"number\">-1</span>))), <span class=\"number\">2</span>) == <span class=\"number\">0</span></span><br><span class=\"line\">                bitmap(<span class=\"built_in\">i</span>, <span class=\"built_in\">j</span>) = <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> </span><br><span class=\"line\">                bitmap(<span class=\"built_in\">i</span>, <span class=\"built_in\">j</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    result = [result bitmap]; <span class=\"comment\">% append bitmap to result</span></span><br><span class=\"line\">    toc</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">toc <span class=\"comment\">% 计时结束</span></span><br></pre></td></tr></table></figure><blockquote><p>上面的代码中有三大要点：</p><ol start=\"0\"><li>注意 parfor 循环中使用的变量只有两种情况：要么是局部变量，要么需要在 parfor 外分配好内存空间。并且尽量避免使用全局变量，可能会导致并行过程中的信息交换拖慢运行速度。</li><li>最内层循环的判断句 <code>if mod(floor(im(i,j)/(2^(v-1))), 2) == 0</code>，这是计算位平面图的核心算法。 自己改写成数学公式以后会很容易理解的。</li><li>其次是 <code>result = [result bitmap];</code>，这句话是把本次循环后计算出来的值增加到结果变量的最后面。</li></ol></blockquote><ol start=\"3\"><li>展示结果：<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% show the result</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span> : <span class=\"number\">8</span></span><br><span class=\"line\">    <span class=\"comment\">% show the bit-plane images, from  column  (i-1)*width+1 to i*width</span></span><br><span class=\"line\">    subplot(<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"built_in\">i</span>+<span class=\"number\">1</span>), imshow(result(<span class=\"number\">1</span>: height, (<span class=\"built_in\">i</span><span class=\"number\">-1</span>)*width+<span class=\"number\">1</span> : <span class=\"built_in\">i</span>*width))</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure></li></ol><blockquote><p>注意这里要自己计算出结果变量中的各个图像的边界，Matlab 不会自动把那些图像分开。</p></blockquote>","categories":[],"tags":[{"name":"Matlab","slug":"Matlab","count":2,"path":"api/tags/Matlab.json"},{"name":"Bit-plane","slug":"Bit-plane","count":1,"path":"api/tags/Bit-plane.json"},{"name":"Digital","slug":"Digital","count":1,"path":"api/tags/Digital.json"},{"name":"Image","slug":"Image","count":1,"path":"api/tags/Image.json"},{"name":"Processing","slug":"Processing","count":1,"path":"api/tags/Processing.json"},{"name":"Parallel","slug":"Parallel","count":1,"path":"api/tags/Parallel.json"},{"name":"parfor","slug":"parfor","count":1,"path":"api/tags/parfor.json"}]}