{"title":"搭建你自己的 SVN 服务器","slug":"version_controller/setup_svn_server","date":"2017-03-03T15:00:39.000Z","updated":"2017-03-11T02:05:43.000Z","comments":true,"path":"api/articles/version_controller/setup_svn_server.json","photos":[],"link":"","excerpt":"SVN 全称：Apache™ Subversion® ，是一个开源的 Enterprise-class centralized version control for the masses 企业级中心化版本控制器。区分于 Git，它不是分布式的而是中心化的，在过去十年中也挺成功。但是在 Git 出现之后，它的光环就有点暗淡了。好，闲话不多说，本教程将会教你如何搭建自己的 SVN 服务器","covers":["/images/setup_svn_server/01.png"],"content":"<p>SVN 全称：<a href=\"https://subversion.apache.org\" target=\"_blank\" rel=\"noopener\">Apache™ Subversion®</a> ，是一个开源的 <code>Enterprise-class centralized version control for the masses</code> 企业级中心化版本控制器。区分于 Git，它不是分布式的而是中心化的，在过去十年中也挺成功。但是在 Git 出现之后，它的光环就有点暗淡了。</p><p>好，闲话不多说，本教程将会教你如何搭建自己的 SVN 服务器</p><a id=\"more\"></a><p>可以看看<a href=\"/images/set_up_svn_server/index.html\">简洁版</a></p><h2 id=\"0x00-准备\"><a href=\"#0x00-准备\" class=\"headerlink\" title=\"0x00 准备\"></a>0x00 准备</h2><ol><li>你需要一台运行 Linux 或者 Unix 系列系统的计算机，并且你有其管理员权限</li><li>你需要有一个正常的网络连接</li><li>macOS 系统中请先安装 brew 包管理器</li></ol><p>本教程将以 macOS 为示例。</p><h2 id=\"0x01-安装-SVN\"><a href=\"#0x01-安装-SVN\" class=\"headerlink\" title=\"0x01 安装 SVN\"></a>0x01 安装 SVN</h2><ol><li>执行下述命令：<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> CentOS</span></span><br><span class=\"line\">sudo yum install svn</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Ubuntu</span></span><br><span class=\"line\">sudo apt-get install svn</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> macOS</span></span><br><span class=\"line\">brew install svn</span><br></pre></td></tr></table></figure></li></ol><p>结果如下图：<br><img src=\"/images/setup_svn_server/01.png\" alt=\"图1\"></p><h2 id=\"0x02-建立-Repository\"><a href=\"#0x02-建立-Repository\" class=\"headerlink\" title=\"0x02 建立 Repository\"></a>0x02 建立 Repository</h2><p>执行下述命令：<br></p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 这条命令进入一个目录</span></span><br><span class=\"line\">cd ~/testsvn/</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 这条命令将会在当前目录下新建一个 Repository</span></span><br><span class=\"line\">svnadmin create test</span><br></pre></td></tr></table></figure><p></p><p>结果如下图：<br><img src=\"/images/setup_svn_server/02.png\" alt=\"图2\"></p><h1 id=\"0x03-配置-Repository\"><a href=\"#0x03-配置-Repository\" class=\"headerlink\" title=\"0x03 配置 Repository\"></a>0x03 配置 Repository</h1><p>键入以下命令：<br></p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 修改 conf 路径下的 svnserve.conf 文件</span></span><br><span class=\"line\">vi conf/svnserve.conf</span><br></pre></td></tr></table></figure><p></p><p>此时就通过 vi 打开你的<code>svnserve.conf</code>配置文件了，找到 [general] 块，你将会看到整个 general 都被注释掉了，<code>###</code> 的是介绍，<code>#</code>的是被注释掉的配置项，可以作为例子。</p><p>这里用中文翻译一下介绍吧：<br>|字段|解释|可选值|<br>|—|—|—|<br>|anon-access|控制未授权用户的权限|write、read、none|<br>|auth-access|控制已授权用户的权限|write、read、none|<br>|password-db|控制密码数据库的位置（以<code>/</code>开头为绝对路径，否则是相对路径）；<br>如果 SASL 被启用，这个文件将不会被使用。|passwd 代表默认数据库|<br>|authz-db|控制“基于路径的访问控制”数据库的位置；<br>指定的路径可能是一个与 repository 相对路径 URL <code>^/</code> 或者是一个绝对路径 URL <code>file://</code> 指向一个在 Subversion Repository 中的文本文件；<br>如果不指定，则不会有基于路径的访问控制。|authz 代表默认数据库|<br>|groups-db|控制“群组定义和每个群组的权限”文件的位置；<br>groups-db 文件和 authz-db 文件格式相同，并且groups-db应该包含一个[groups]块；<br>不过如果开启了这个选项，authzdb 文件中奖不能包含 [groups] 块。|<br>|realm|指定存储库的认证领域，他们应该有同一个密码数据库，反之亦然；<br>默认的 realm 是 repository 的 uuid|<br>|force-username-case|控制SVNServer在按照authz-db指定的规则比较用户名之前转换大小写。|upper、lower、none|<br>|hooks-env|指定一个路径到 hood script 环境配置文件，这个选项会覆盖 per-repository 的默认值，并且可以用来在单个文件中配置有多个 repositories 情况下的 hood script 环境|</p><p>介绍完以后，我们这样修改一下svnserve.conf：<br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[general]</span><br><span class=\"line\">anon-access = none</span><br><span class=\"line\">auth-access = write</span><br><span class=\"line\">password-db = passwd</span><br><span class=\"line\">authz-db = authz</span><br></pre></td></tr></table></figure><p></p><p>接下来修改 conf 下的 passwd 文件，添加两个用户名和密码，在[users] 块中加入以下内容：<br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root = root@Svnserver</span><br><span class=\"line\">ysy = userysy</span><br></pre></td></tr></table></figure><p></p><p>然后修改 conf 下的 authz 文件：<br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[groups]</span><br><span class=\"line\">admin = root # 注意这里的</span><br><span class=\"line\">user = ysy</span><br><span class=\"line\">[/]</span><br><span class=\"line\">@admin = rw</span><br><span class=\"line\">@user = r</span><br><span class=\"line\">[test: /]</span><br><span class=\"line\">@admin = rw</span><br><span class=\"line\">@user = r</span><br></pre></td></tr></table></figure><p></p><p>这里首先定义了两个用户组，一个是 root，另一个是 user。</p><p>admin 中有 root 这个用户；user 中有 ysy 这个用户。然后分别给他们配置路径权限。</p><p>值得注意的是<code>[/]</code>指 testsvn 目录，而<code>[test: /]</code>指 test 目录。</p><p>基本的配置到这里已经完成，理论上我们可以启动我们的 SVN 服务器了。</p><p>但是为了安全起见，还有些事情可以做，比如说使用 <code>chown -R</code> / <code>chmod -R</code> 命令控制一下 svntest 目录的所有者和权限之类的，</p><h2 id=\"0x04-启动服务器\"><a href=\"#0x04-启动服务器\" class=\"headerlink\" title=\"0x04 启动服务器\"></a>0x04 启动服务器</h2><p>执行以下命令：<br></p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 注意：下面的 --<span class=\"built_in\">log</span>-file=不能使用`~`来指定当前用户的 home 目录</span></span><br><span class=\"line\">sudo svnserve -d -r ~/testsvn --log-file=./log/svn.log</span><br></pre></td></tr></table></figure><p></p><p>SVN 默认使用的端口是3690，如果没冲突，这样 SVN 服务器就成功启动了。</p><p>可以用 less 命令查看上面命令指定的 log 文件，也可以像这样测试是否启动成功：<br></p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 1. 使用 ps 命令查看进程</span></span><br><span class=\"line\">ps aux | grep svnserve</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 2. 使用 Telnet 测试连接</span></span><br><span class=\"line\">telnet localhost 3690</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 3. 使用 svn 客户端测试连接</span></span><br></pre></td></tr></table></figure><p></p><h2 id=\"0x05-创建目录结构并导入到-SVN-Repository-中\"><a href=\"#0x05-创建目录结构并导入到-SVN-Repository-中\" class=\"headerlink\" title=\"0x05 创建目录结构并导入到 SVN Repository 中\"></a>0x05 创建目录结构并导入到 SVN Repository 中</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p ~/tmp/svntmp/;</span><br><span class=\"line\">cd ~/tmp/svntmp/;</span><br><span class=\"line\">mkdir master dev ysy;</span><br><span class=\"line\">cd ../../;</span><br><span class=\"line\">svn import --username root -m 'init repo' ~/tmp/svntmp/ svn://localhost/test</span><br></pre></td></tr></table></figure><p>输入用户名密码，大功告成！<br><img src=\"/images/setup_svn_server/03.png\" alt=\"图3\"></p><blockquote><p>如果有任何问题，可以通过 <code>--help</code> 参数来查看：<br></p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 查看 svn 的帮助信息</span></span><br><span class=\"line\">svn --help</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 查看 svn import 的帮助信息</span></span><br><span class=\"line\">svn import --help</span><br></pre></td></tr></table></figure><p></p></blockquote><h2 id=\"0x06-最后推荐几款-GUI-的-SVN-客户端\"><a href=\"#0x06-最后推荐几款-GUI-的-SVN-客户端\" class=\"headerlink\" title=\"0x06 最后推荐几款 GUI 的 SVN 客户端\"></a>0x06 最后推荐几款 GUI 的 SVN 客户端</h2><ol><li>首先肯定是是跨平台的开源的 TortoiseSVN</li><li>如果在 macOS 下想有更好的体验，特别是在处理冲突或者合并源码的时候，强烈推荐 Cornerstone。</li></ol><blockquote><p>macOS 为了安全起见，默认是不允许运行苹果白名单以外签名的 app 的，运行则会报告此安装包已损坏。所以如果在 macOS 中需要运行未知来源的 app，需要输入以下命令解锁：<br></p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo xattr -rd com.apple.quarantine /Applications/theApplication.app</span><br></pre></td></tr></table></figure><p></p></blockquote><p>下图是 Cornerstone 的运行结果：<br><img src=\"/images/setup_svn_server/04.png\" alt=\"图4\"></p>","categories":[],"tags":[{"name":"Server","slug":"Server","count":3,"path":"api/tags/Server.json"},{"name":"Tutorial","slug":"Tutorial","count":2,"path":"api/tags/Tutorial.json"},{"name":"Guide","slug":"Guide","count":2,"path":"api/tags/Guide.json"},{"name":"服务器","slug":"服务器","count":2,"path":"api/tags/服务器.json"},{"name":"教程","slug":"教程","count":2,"path":"api/tags/教程.json"},{"name":"配置","slug":"配置","count":2,"path":"api/tags/配置.json"},{"name":"SVN","slug":"SVN","count":1,"path":"api/tags/SVN.json"}]}