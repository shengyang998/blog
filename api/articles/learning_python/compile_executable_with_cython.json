{"title":"用 Cython 把 Python 文件编译成可执行文件","slug":"learning_python/compile_executable_with_cython","date":"2017-10-07T07:44:40.841Z","updated":"2018-10-16T07:32:28.592Z","comments":true,"path":"api/articles/learning_python/compile_executable_with_cython.json","photos":[],"link":"","excerpt":"macOS 预装的 python 版本为 2.7，这里将会展示如何把 3.4 版本的 python 代码编译成可执行文件<br>","covers":null,"content":"<p>macOS 预装的 python 版本为 2.7，这里将会展示如何把 3.4 版本的 python 代码编译成可执行文件<br><a id=\"more\"></a></p><h2 id=\"0x00\"><a href=\"#0x00\" class=\"headerlink\" title=\"0x00\"></a>0x00</h2><ol start=\"0\"><li>安装 cython，一般可以使用 <code>sudo pip install -U cython</code> 来安装</li><li>写好 python 代码，保存成 main.py 文件</li><li><code>cython --embed main.py</code><br>这时会生成一个 .c 文件，也就是转换后的 c 代码</li><li><p>使用 which 命令找到当前使用的 python 的路径，比如说我的 python3 安装在</p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MBA:~ ysy$ which python3</span><br><span class=\"line\">/Library/Frameworks/Python.framework/Versions/3.4/bin/python3</span><br></pre></td></tr></table></figure><p>也就是说<code>头</code>和<code>动态链接库</code>分别在 <code>/Library/Frameworks/Python.framework/Versions/3.4/Headers</code> 和 <code>/Library/Frameworks/Python.framework/Versions/3.4/lib</code> 这里，记录下这两个路径。推荐使用环境变量：</p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PYTHON_LIB=/Library/Frameworks/Python.framework/Versions/3.4/lib</span><br><span class=\"line\">export C_INCLUDE_PATH=/Library/Frameworks/Python.framework/Versions/3.4/Headers</span><br></pre></td></tr></table></figure></li><li><p>使用 <code>gcc</code> 编译成可执行文件</p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcc -I $C_INCLUDE_PATH -L $PYTHON_LIB -lpython3.4m -o a main.c</span><br></pre></td></tr></table></figure><p>解释一下， <code>-I</code> 是指定预编译头文件的位置；<code>-L</code> 是指定动态链接库的位置；<code>-l</code> 是指定动态链接库名。</p></li></ol><h3 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h3><ol start=\"0\"><li>注意三个参数标记 <code>-I</code> <code>-L</code> <code>-l</code>，他们和紧跟在后的参数之间是可以没有空格的。</li><li>库名和库的文件名之间的关系满足：<code>文件名 = &#39;lib&#39; + 库名 + &#39;.so&#39;</code>，可以自行 <code>ls -alh $PYTHON_LIB</code> 验证。</li><li>其实这个编译成可执行文件不太符合 cython 的初衷，cython 的初衷是为了把 python 代码编译成库，用来加速 python 代码调用的。当然，有时候因为自己不想写多个 py 文件，直接编译成可执行代码来用用也无妨。</li><li>其他问题可以参考 <a href=\"http://docs.cython.org\" target=\"_blank\" rel=\"noopener\">Cython’s Documentation</a></li></ol>","categories":[],"tags":[{"name":"Python","slug":"Python","count":4,"path":"api/tags/Python.json"},{"name":"Cython","slug":"Cython","count":1,"path":"api/tags/Cython.json"}]}