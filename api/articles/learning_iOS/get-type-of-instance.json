{"title":"Swift 中如何获取实例类型","slug":"learning_iOS/get-type-of-instance","date":"2017-01-15T02:17:03.000Z","updated":"2017-01-29T02:27:30.000Z","comments":true,"path":"api/articles/learning_iOS/get-type-of-instance.json","photos":[],"link":"","excerpt":"一门编程语言的动态特性，最基础的就是获取一个实例的类型。<br>","covers":null,"content":"<p>一门编程语言的动态特性，最基础的就是获取一个实例的类型。<br><a id=\"more\"></a></p><h2 id=\"在-ObjC-中我们怎么做？\"><a href=\"#在-ObjC-中我们怎么做？\" class=\"headerlink\" title=\"在 ObjC 中我们怎么做？\"></a>在 ObjC 中我们怎么做？</h2><p>在 ObjC 中我们可以通过一个实例的 class 方法来获取其类型名<br></p><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">NSDate</span> *date = [<span class=\"built_in\">NSDate</span> date];</span><br><span class=\"line\"><span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"%@\"</span>,<span class=\"built_in\">NSStringFromClass</span>([date <span class=\"keyword\">class</span>]));</span><br></pre></td></tr></table></figure><p></p><h2 id=\"在-Swift-中没有实例的-class-方法\"><a href=\"#在-Swift-中没有实例的-class-方法\" class=\"headerlink\" title=\"在 Swift 中没有实例的 class 方法\"></a>在 Swift 中没有实例的 class 方法</h2><p>可以求助于 ObjC 运行时，调用 <code>object_getClass(AnyTypeInstance)</code>。例子如下：<br></p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> date = <span class=\"type\">NSDate</span>()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(object_getClass(date))</span><br></pre></td></tr></table></figure><p></p><h2 id=\"object-getClass-方法返回类型是？\"><a href=\"#object-getClass-方法返回类型是？\" class=\"headerlink\" title=\"object_getClass() 方法返回类型是？\"></a><code>object_getClass()</code> 方法返回类型是？</h2><p>是 AnyClass! 可以通过 <code>debugPrint</code> 来验证，关于 <code>debugPrint</code>，参见<a href=\"../debugPrint/README.md\">debugPrint()</a></p><h2 id=\"更加符合-Swift-风格的做法\"><a href=\"#更加符合-Swift-风格的做法\" class=\"headerlink\" title=\"更加符合 Swift 风格的做法\"></a>更加符合 Swift 风格的做法</h2><p>Swift 2 以前的方法，已抛弃<br></p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> date = <span class=\"type\">NSDate</span>()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(date.<span class=\"keyword\">dynamicType</span>)</span><br></pre></td></tr></table></figure><p></p><p>Swift 3.0 以后使用 <code>type(of:AnyTypeInstance)</code>方法<br></p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> date = <span class=\"type\">NSDate</span>()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(type(of:date))</span><br></pre></td></tr></table></figure><p></p><p><em>参考:</em></p><ol><li><em><a href=\"http://swifter.tips/instance-type/\" target=\"_blank\" rel=\"noopener\">王魏的博客 Swifter</a></em></li><li><em><a href=\"https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Types.html\" target=\"_blank\" rel=\"noopener\">Apple 官方文档关于 Metatype Type 的内容</a></em></li></ol>","categories":[],"tags":[{"name":"iOS","slug":"iOS","count":9,"path":"api/tags/iOS.json"},{"name":"Programming","slug":"Programming","count":13,"path":"api/tags/Programming.json"},{"name":"Swift","slug":"Swift","count":4,"path":"api/tags/Swift.json"},{"name":"type","slug":"type","count":2,"path":"api/tags/type.json"},{"name":"language","slug":"language","count":1,"path":"api/tags/language.json"},{"name":"instance","slug":"instance","count":1,"path":"api/tags/instance.json"}]}