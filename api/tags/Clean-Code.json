{"name":"Clean Code","slug":"Clean-Code","count":1,"postlist":[{"title":"《代码整洁之道》笔记","slug":"learning_clean_code/clean_code","date":"2018-07-29T15:32:15.663Z","updated":"2019-01-08T10:07:29.909Z","comments":true,"path":"api/articles/learning_clean_code/clean_code.json","excerpt":"<blockquote><p>这座楼，除了我的房间以外，已经彻底基皮化了。”<br>“基皮化？”她莫名其妙。<br>“基皮就是没用的东西，垃圾邮件啊，空火柴盒啊，口香糖包装纸啊，昨天的报纸啊。周围没人的时候，基皮就会自我繁殖。比如，如果你睡前在房间里留了些基皮，第二天醒来就会发现基皮增加了一倍。基皮总是会越变越多。”<br>“我明白了。”女孩迟疑地盯着他，不知该不该相信他，一时无法确定他是不是在开玩笑。<br>“这就是基皮第一定律，”他说，“‘基皮驱逐非基皮’。就像格拉舍姆的劣币驱逐良币定律。那些空房间里头，没有活人在抵抗基皮。”</p></blockquote><p>—— P.K.Dick, Do Androids Dream of Electric Sheep?</p><p>就如房间一样，代码也要时常打理才能保持清洁，否则会被“基皮”占领，最终因‘基皮驱逐非基皮’而崩溃。基皮是小说里的概念，如果借助热力学定律里的“熵”的概念，对于代码这种既抽象又精确的事物来说，熵越低自然就越好。<br>那么如何能写出低熵的代码呢？很遗憾，这需要经验，非常考验程序员之功力。而《代码整洁之道》就是这样一本“低熵代码编写指南”，借助它可以<strong>快速入门</strong>编写低熵的代码。但是这也只是一本快速入门书而已，尽信书不如无书，具体还是要在遵循规则中突破规则。<br>这本书的核心观点就是要【清晰】，而要做到这一点的方法论就是【分层、短小】……</p>","keywords":null,"cover":null,"content":null,"text":"这座楼，除了我的房间以外，已经彻底基皮化了。”<br>“基皮化？”她莫名其妙。<br>“基皮就是没用的东西，垃圾邮件啊，空火柴盒啊，口香糖包装纸啊，昨天的报纸啊。周围没人的时候，基皮就会自我繁殖。比如，如果你睡前在房间里留了些基皮，第二天醒来就会发现基皮增加了一倍。基皮总是会越变","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"Programming","slug":"Programming","count":13,"path":"api/tags/Programming.json"},{"name":"Clean Code","slug":"Clean-Code","count":1,"path":"api/tags/Clean-Code.json"}]}]}