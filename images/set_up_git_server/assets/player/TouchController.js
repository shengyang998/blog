var kTouchStartEventName="touchstart";var kTouchMoveEventName="touchmove";var kTouchEndEventName="touchend";var kTouchCancelEventName="touchcancel";var kGestureStartEventName="gesturestart";var kGestureEndEventName="gestureend";var kSwipeEvent="TouchController:SwipeEvent";var kTapEvent="TouchController:TapeEvent";var TouchController=Class.create({initialize:function(){document.observe(kTouchStartEventName,this.handleTouchStartEvent.bind(this));document.observe(kTouchMoveEventName,this.handleTouchMoveEvent.bind(this));document.observe(kTouchEndEventName,this.handleTouchEndEvent.bind(this));document.observe(kTouchCancelEventName,this.handleTouchCancelEvent.bind(this));document.observe(kGestureStartEventName,this.handleGestureStartEvent.bind(this));document.observe(kGestureEndEventName,this.handleGestureEndEvent.bind(this));this.swipeInProgress=false;this.swipeFingerCount=0;this.swipeStartTime=0;this.swipeStartX=0;this.swipeStartY=0;this.preventDefault=true;this.tapEventCallback=null;this.setTrackArea(0,0,0,0);this.enableTouchTracking=true},setTouchTrackingEnabled:function(e){this.enableTouchTracking=e},setTrackArea:function(e,t,n,a){debugMessage(kDebugTouchController_SetTrackArea,"left: "+e+" top: "+t+" width: "+n+" height: "+a);this.trackAreaLeft=e;this.trackAreaTop=t;this.trackAreaRight=e+n;this.trackAreaBottom=t+a},registerTapEventCallback:function(e){this.tapEventCallback=e},isTouchWithinTrackArea:function(e){debugMessage(kDebugTouchController_IsTouchWithinTrackArea,"checking...");if(this.enableTouchTracking===false){debugMessage(kDebugTouchController_IsTouchWithinTrackArea,"- nope, tracking is disabled");return false}if(e.clientX<this.trackarealeft){debugmessage(kdebugtouchcontroller_istouchwithintrackarea,"- nope,="" x="" <="" left");return="" false}if(e.clientx="">this.trackAreaRight){debugMessage(kDebugTouchController_IsTouchWithinTrackArea,"- nope, x > right");return false}if(e.clientY<this.trackareatop){debugmessage(kdebugtouchcontroller_istouchwithintrackarea,"- nope,="" y="" <="" top");return="" false}if(e.clienty="">this.trackAreaBottom){debugMessage(kDebugTouchController_IsTouchWithinTrackArea,"- nope, y > bottom");return false}debugMessage(kDebugTouchController_IsTouchWithinTrackArea,"- yes it is!");return true},handleTouchStartEvent:function(e){debugMessage(kDebugTouchController_HandleTouchStartEvent,"touch event has "+e.touches.length+" fingers...");if(this.swipeInProgress===false){debugMessage(kDebugTouchController_HandleTouchStartEvent,"- this is the first finger down event...");var t=e.touches[0];if(this.isTouchWithinTrackArea(t)){debugMessage(kDebugTouchController_HandleTouchStartEvent,"- start tracking a swipt event...");if(this.preventDefault){e.preventDefault()}this.swipeInProgress=true;this.swipeFingerCount=e.touches.length;this.swipeStartTime=new Date;this.swipeStartX=t.clientX;this.swipeStartY=t.clientY}else{debugMessage(kDebugTouchController_HandleTouchStartEvent,"- but it is outside of the track area")}}else{debugMessage(kDebugTouchController_HandleTouchStartEvent,"- this is a subsequent finger down event. update finger count...");if(e.touches.length>this.swipeFingerCount){this.swipeFingerCount=e.touches.length;debugMessage(kDebugTouchController_HandleTouchStartEvent,"- this.swipeFingerCount:"+this.swipeFingerCount)}}},handleTouchMoveEvent:function(e){if(this.preventDefault){e.preventDefault()}debugMessage(kDebugTouchController_HandleTouchCancelEvent,"")},handleTouchEndEvent:function(e){debugMessage(kDebugTouchController_HandleTouchEndEvent,"touch event has "+e.touches.length+" fingers...");if(this.swipeInProgress){if(this.preventDefault){e.preventDefault()}if(e.touches.length===0){debugMessage(kDebugTouchController_HandleTouchEndEvent,"-  "+this.swipeFingerCount+" finger swipe is complete.");var t=e.changedTouches[0];var n=document.viewport.getDimensions();var a=n.width/3;var i=n.height/3;var o=n.width/3;var s=t.clientX-this.swipeStartX;var r=t.clientY-this.swipeStartY;var u=Math.abs(s);var h=Math.abs(r);var l=new Date;var c=l-this.swipeStartTime;var g=false;var d=false;var v=400;var T=20;if(c<v){debugmessage(kdebugtouchcontroller_handletouchendevent,"- elapsed="" time="" was="" short="" enough="" to="" be="" a="" tap,="" check="" its="" magnitude...");if(u<t&&h<t){g="true}else{debugMessage(kDebugTouchController_HandleTouchEndEvent,"-" magnitude="" too="" big="" if="" it's="" swipe...")}}else{debugmessage(kdebugtouchcontroller_handletouchendevent,"-="" long="" swipe...")}if(c="">800){debugMessage(kDebugTouchController_HandleTouchEndEvent,"-  elapsed time too long to be a swipe, ignoring...")}else{if(u>h){if(h>i){debugMessage(kDebugTouchController_HandleTouchEndEvent,"-  vertical magnitude too high, ignoring...")}else{d=true}}else{if(u>o){debugMessage(kDebugTouchController_HandleTouchEndEvent,"-  horizontal magnitude too high, ignoring...")}else{d=true}}}if(g){debugMessage(kDebugTouchController_HandleTouchEndEvent,"-  it's a "+this.swipeFingerCount+" finger tap");if(this.tapEventCallback){var e={};e.memo={};e.memo.fingers=this.swipeFingerCount;e.memo.pointX=t.clientX;e.memo.pointY=t.clientY;debugMessage(kDebugTouchController_HandleTouchEndEvent,"- invoking callback with pointX: "+t.clientX+" pointY: "+t.clientY+"...");this.tapEventCallback(e);debugMessage(kDebugTouchController_HandleTouchEndEvent,"- back from callback")}else{debugMessage(kDebugTouchController_HandleTouchEndEvent,"- firing TapEvent...");document.fire(kTapEvent,{fingers:this.swipeFingerCount,pointX:t.clientX,pointY:t.clientY})}}else{if(d){var b;if(u>h){b=s</v){debugmessage(kdebugtouchcontroller_handletouchendevent,"-></this.trackareatop){debugmessage(kdebugtouchcontroller_istouchwithintrackarea,"-></this.trackarealeft){debugmessage(kdebugtouchcontroller_istouchwithintrackarea,"->